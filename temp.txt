        if (Type.startswith('Data')):
            Trees[Type].Draw(var + " >> " + histName, "(" + cut + cutbtag + ")", 'goff')
            # 0 tag for data-driven shape
        elif (Type.startswith('WJets')): 
            ############################################
            ##### Pretag, to be scaled down later
            ############################################
            # here keep weight_WxsecNoLight_comb in case we need to change the scale factors later             
            Trees[Type].Draw(var+" >> "+histNamePre,"("+weight+")*("+str(SFWjmu)+")*("+cut+cutwjj+")",'goff')
            Trees[Type].Draw(var+" >> "+"WbbHistPre","("+weight+")*("+str(SFWbmu)+")*("+cut+cutwbb+")",'goff')
            Trees[Type].Draw(var+" >> "+"WccHistPre","("+weight+")*("+str(SFWcmu)+")*("+cut+cutwcc+")",'goff')
            #print 'WJets light pre: ',VariablesPre[Type].Integral() 
            VariablesPre[Type].Add(WbbHistPre)
            #print 'WJets light+bb pre: ',VariablesPre[Type].Integral() 
            VariablesPre[Type].Add(WccHistPre)
            #print 'WJets light+bb+cc pre: ',VariablesPre[Type].Integral() 
            ############################################
            ##### >=1, to get the ratio on the fly
            ############################################
            Trees[Type].Draw(var+" >> "+histName,"("+weight+")*("+str(SFWjmu)+")*("+cut+cutwjj+cutbtag+")",'goff')
            Trees[Type].Draw(var+" >> "+"WbbHist","("+weight+")*("+str(SFWbmu)+")*("+cut+cutwbb+cutbtag+")",'goff')
            Trees[Type].Draw(var+" >> "+"WccHist","("+weight+")*("+str(SFWcmu)+")*("+cut+cutwcc+cutbtag+")",'goff') 
            print 'WJets light: ',Variables[Type].Integral()
            Variables[Type].Add(WbbHist)
            print 'WJets light+bb: ',Variables[Type].Integral()
            Variables[Type].Add(WccHist)
            print 'WJets light+bb+cc: ',Variables[Type].Integral()
        elif (not Type.startswith('T')):
            Trees[Type].Draw(var + " >> " + histNamePre, "("+weight+")*("+cut+")", 'goff')
            Trees[Type].Draw(var + " >> " + histName, "("+weight+")*("+cut+cutbtag+")", 'goff')
        elif (Type.startswith('TTbar')):
            Trees[Type].Draw(var + " >> " + histName, "("+weight+")*("+weight_ttbar+")*("+cut+cutbtag+")", 'goff')
        else:
            #print 'cut = ',cut+cutbtag
            Trees[Type].Draw(var + " >> " + histName, "("+weight+")*("+cut+cutbtag+")", 'goff')
